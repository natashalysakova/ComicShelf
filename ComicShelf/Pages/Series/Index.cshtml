@page
@using ComicShelf.Localization;
@using Microsoft.AspNetCore.Mvc.Localization;
@model ComicShelf.Pages.SeriesNs.IndexModel
@inject IHtmlLocalizer<SharedResource> Localizer

@{
    ViewData["Title"] = "Series";
}

<h1>@Localizer["Series"]</h1>

<div class="row">
    <div class="custom-table">

        @foreach (var series in Model.Series)
        {
            <partial name="_SeriesRowPartial" model="series" view-data="@ViewData" />
        }
    </div>
</div>
@section Scripts {
    <script src="~/js/Series.js"></script>
}
@*<div class="row">
    <table class="table table-hover">
        <thead>
            <tr>
                <th scope="col">
                    @Localizer["Name"]
                </th>
                <th scope="col">
                    @Localizer["Type"]
                </th>
                <th scope="col">
                    @Localizer["Volumes"] / @Localizer["TotalVolumes"]
                </th>
                <th scope="col">
                    @Localizer["Ongoing"]
                </th>
                <th scope="col">
                    @Localizer["Publisher"]
                </th>
                <th scope="col">
                    @Localizer["Color"]
                </th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var series in Model.Series)
            {
                <form data-ajax="true" method="post" data-ajax-method="post" asp-page-handler="Update">
                <tr>
                    <input asp-for="@series.Id" hidden />
                    <td>
                        <div class="input-group mb-1">
                            <span class="input-group-text">@Localizer["Name"]</span>
                            <input type="text" asp-for="@series.Name" class="form-control" />
                        </div>
                        <div class="input-group">
                            <span class="input-group-text">@Localizer["OriginalName"]</span>
                            <input type="text" asp-for="@series.OriginalName" class="form-control">
                        </div>
                    </td>
                    <td><select asp-items="(IEnumerable<SelectListItem>)@ViewData["Types"]" class="form-select" asp-for="@series.Type"></select></td>
                    <td>
                        <div class="input-group">
                            <input type="text" asp-for="@series.VolumeCount" readonly class="form-control" />
                            <span class="input-group-text">/</span>
                            <input type="text" asp-for="@series.TotalVolumes" class="form-control" />

                        </div>
                    </td>
                    <td>
                        <input type="checkbox" asp-for="@series.Ongoing" class="form-check" />
                    </td>
                    <td>
                        <select class="form-select" asp-for="@series.Publisher" asp-items="@Model.Publishers"  autocomplete="off">
                        </select>

                    </td>
                    <td>
                        <input type="color" asp-for="@series.Color" class="form-control-color" />
                    </td>
                    <td><button type="submit" class="btn btn-secondary btn-success">@Localizer["Update"]</button></td>

                </tr>
                </form>

            }
        </tbody>
    </table>
</div>
*@




@*
<div class="row">
    @foreach (var item in Model.Series)
    {
        <div class="col-xxl-3 col-xl-4 col-lg-6 col-md-6 col-sm-12 p-1">

            <div class="card">
                @if (!string.IsNullOrEmpty(item.Name))
                {
                    <h5 class="card-header">@item.Name</h5>
                }
                else
                {
                    <h5 class="card-header">@item.OriginalName</h5>
                }
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(item.OriginalName))
                    {
                        <h6 class="card-title">@item.OriginalName</h6>
                    }
                    else
                    {
                        <h6 class="card-title"></h6>
                    }
                    <p class="text-body-secondary">@item.Type</p>
                </div>
                @{
                    var latestVolume = item.Volumes.Where(x => x.Number == item.Volumes.Max(y => y.Number));
                    var url = "...";
                    if (latestVolume.Any())
                    {
                        url = latestVolume.First().CoverUrl;
                    }
                }
                <img src="~/@url" class="card-img-top" alt="..." height="400px">
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">
                        @{

                        }
                    </li>
                    <li class="list-group-item">
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-cash-coin"></i></span>
                            <span type="text" class="form-control">@item.Volumes.Where(x=>x.PurchaseStatus != Models.Enums.PurchaseStatus.Announced).Count()</span>
                            <span class="input-group-text">/</span>
                            @{
                                if (item.Ongoing)
                                {
                                    <span class="form-control text-bg-success">Ongoing</span>
                                }
                                else
                                {
                                    <span type="text" class="form-control">@item.TotalVolumes</span>
                                }
                            }
                        </div>
                    </li>
                    <li class="list-group-item">
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-bookmark-check"></i></span>
                            <span type="text" class="form-control">@item.Volumes.Count(x=>x.Status == Models.Enums.Status.Completed)</span>
                            <span class="input-group-text">/</span>
                            <span type="text" class="form-control">@item.Volumes.Where(x=>x.PurchaseStatus != Models.Enums.PurchaseStatus.Announced).Count()</span>
                        </div>
                    </li>
                </ul>
                <div class="card-footer">
                    <div class="row">
                        <div class="col-6 text-start">
                            <a asp-page="./Delete" asp-route-id="@item.Id" class="btn btn-outline-danger"><i class="bi bi-trash"></i></a>
                        </div>
                        <div class="col-6 text-end">
                            <a asp-page="./Edit" asp-route-id="@item.Id" class="btn btn-primary ">Edit</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        <li class="page-item">
            <a class="page-link" href="#" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        <li class="page-item active"><a class="page-link" href="#">1</a></li>
        <li class="page-item"><a class="page-link" href="#">2</a></li>
        <li class="page-item"><a class="page-link" href="#">3</a></li>
        <li class="page-item">
            <a class="page-link" href="#" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>*@