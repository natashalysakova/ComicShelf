@page "~/Manga"
@using ComicShelf.Localization;
@using ComicShelf.Pages.Shared.Components;
@using Microsoft.AspNetCore.Mvc.Localization;
@using Newtonsoft.Json;
@using Services.Services.Enums;
@model ComicShelf.Pages.Volumes.IndexModel
@inject LocalizationService Localizer

@{
    ViewData["Title"] = Localizer["MainPage"];
    ViewData["IndexActive"] = "active";
}

@*<div class="card">
    @(await Html.RenderComponentAsync<DataViewComponent>(RenderMode.ServerPrerendered, new { Data = "I came from Index", style = "bg-danger" }))
</div>*@


<div class="row">
    <div class="col-md-4 col-lg-3 col-xl-2">
        <div class="row single-button">
            <button class="btn btn-success mb-3" data-bs-toggle="modal" data-bs-target="#createModal">@Localizer["AddNewVolume"]</button>
        </div>
        <div class="row single-button mb-3">
            <div class="col" style="
                                    padding-left: 0;
                                    padding-right: 0;">

                <select class="form-select half-transparent" id="filter-presets" onchange="filter(event)">
                    <option class="bg-secondary" value="0">@Localizer["None"]</option>
                    @foreach (var group in Model.Filters)
                    {
                        <optgroup class="bg-secondary" label="@Localizer[group.Key]">
                            @foreach (var item in group)
                            {
                                var text = group.Key == "standart" ? @Localizer[item.Name] : item.Name;
                                <option class="bg-secondary" value="@item.Id" data-json="@item.Json">@text</option>
                            }
                        </optgroup>
                    }
                </select>
            </div>
            <div class="col-auto" style="
                                    padding-right: 0;">

                <button type="button" class="btn btn-success" id="save-popover"
                        data-bs-toggle="popover" data-bs-title="@Localizer["SaveFilter"]">
                    +
                </button>
                <div hidden>
                    <form asp-page-handler="SaveFilter" data-ajax-method="post" data-ajax="true" data-ajax-complete="refillFilterDropdown" data-name="save-filter-form">
                        <input type="text" class="form-control half-transparent mb-3" name="filterName" id="filterName" autocomplete="off" placeholder="@Localizer["FilterName"]" />
                        <div class="row single-button">
                            <button type="submit" class="btn btn-info" data-bs-title="@Localizer["SaveFilter"]">@Localizer["Save"]</button>
                        </div>

                    </form>
                </div>
            </div>
        </div>

        <div class="row single-button">
            <button class="btn btn-outline-danger mb-3" onclick="resetFilters()">@Localizer["Reset"]</button>
        </div>

        <div class="row" id="filters">

            @{
                var filters = Model.FromCookies();
            }

            <span class="filter-header">@Localizer["PurchaseStatus"]</span>

            <div class="btn-group-vertical mb-3" role="group" aria-label="purchse status filters">
                @foreach (var item in ViewData["PurchaseFilters"] as IEnumerable<PurchaseFilterEnum>)
                {
                    var check = filters.filter == @item ? "checked" : string.Empty;

                    <input id="Purchase_@item" class="btn-check filter" type="radio" name="filter" value="@((int)item)" autocomplete="off" data="@item" @check />
                    <label for="Purchase_@item" class="btn btn-secondary">
                        @Localizer[item.ToString()]
                    </label>
                }

            </div>
            <span class="filter-header">@Localizer["Digitality"]</span>
            <div class="btn-group-vertical mb-3" role="group" aria-la bel="digitiality filters">
                @foreach (var item in ViewData["DigitalityFilters"] as IEnumerable<DigitalityEnum>)
                {
                    var check = filters.digitality == @item ? "checked" : string.Empty;

                    <input id="Digitality_@item" class="btn-check filter" type="radio" name="digitality" value="@((int)item)" autocomplete="off" data="@item" @check />
                    <label for="Digitality_@item" class="btn btn-secondary">
                        @Localizer[item.ToString()]
                    </label>
                }
            </div>
            <span class="filter-header">@Localizer["ReadingStatus"]</span>
            <div class="btn-group-vertical mb-3" role="group" aria-la bel="reading filters">
                @foreach (var item in ViewData["ReadingFilters"] as IEnumerable<ReadingEnum>)
                {
                    var check = filters.reading == @item ? "checked" : string.Empty;

                    <input id="Reading_@item" class="btn-check filter" type="radio" name="reading" autocomplete="off" value="@((int)item)" data="@item" @check />
                    <label for="Reading_@item" class="btn btn-secondary">
                        @Localizer[item.ToString()]
                    </label>
                }
            </div>
        </div>


    </div>
    <div class="col-md-8 col-lg-9 col-xl-10">
        <div class="row mb-3 col-xl-6 offset-xl-6">
            <div class="col">
                <div class="input-group">
                    <input id="search-field" type="search" class="form-control filter half-transparent" placeholder="@Localizer["Search"]" aria-label="Search" aria-describedby="button-addon2">
                </div>
            </div>
            <div class="col">

                <div class="input-group col-auto">

                    <select id="sortType" class="form-select half-transparent" aria-label="Default select example" asp-for="@filters.sort">
                        @foreach (var item in ViewData["Sort"] as IEnumerable<SortEnum>)
                        {
                            <option value="@((int)item)" class="bg-secondary" data="@item">@Localizer[item.ToString()]</option>
                        }
                        @*                            <option value="0">@Localizer["ByCreationDate"]</option>
                        <option value="1">@Localizer["ByTitle"]</option>
                        <option value="2" selected>@Localizer["ByPurchaseDate"]</option>
                        *@
                    </select>
                    <button id="sortDirection" class="btn btn-secondary" data-sort="up">
                        <i class="bi bi-sort-up"></i>
                    </button>
                </div>
            </div>

        </div>
        <div class="row" id="shelves">
            <partial name="_ShelfPartial" model="@Model.Volumes" view-data="@ViewData" />
        </div>

    </div>
</div>








@section Scripts {
    <div class="modal fade" id="detailModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content" id="detail-modal-content">
            </div>
        </div>
    </div>

    <div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
        <partial name="CreatePartial" />
    </div>

    <script src="~/js/Volume.js"></script>
    <script>
        completed = (res) => {
            alert('Posted using Unobtrusive AJAX');
        };
    </script>
}